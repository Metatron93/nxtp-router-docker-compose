version: "3.8"

services:
  router:
    container_name: router
    image: ghcr.io/connext/router:$ROUTER_VERSION
    restart: always
    ports:
      - $ROUTER_EXTERNAL_PORT:8080
    volumes:
      - ./config.json:/config/config.json
    environment:
      - NXTP_CONFIG_FILE=/config/config.json
    logging:
      driver: json-file
      options:
        max-size: 10m
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    healthcheck:
      test: netstat -ltn | grep -c 8080
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
    depends_on:
      - "signer"
      - "redis"
    networks:
      - nxtp

  ################################################################################

  signer:
    container_name: signer
    image: consensys/web3signer:$WEB3SIGNER_VERSION
    command: "--config-file=/home/node/signer/config.yaml eth1"
    restart: always
    volumes:
      - ./data/signerConfig/config.yaml:/home/node/signer/config.yaml
      - ./key.yaml:/home/node/signer/keyFiles/key.yaml
    logging:
      driver: json-file
      options:
        max-size: 10m
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    healthcheck:
      test: netstat -ltn | grep -c 9000
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - nxtp

  ################################################################################

  redis:
    container_name: redis
    image: redis:$REDIS_VERSION
    restart: always
    volumes:
      - redis_data:/data
    logging:
      driver: json-file
      options:
        max-size: 10m
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    healthcheck:
      test: redis-cli --raw incr ping
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - nxtp

  ################################################################################

  dcmetrics:
    container_name: dcmetrics
    image: "wywywywy/docker_stats_exporter:latest"
    restart: always
    volumes:
      - /run/user/${USERID}/docker.sock:/var/run/docker.sock:ro
#    ports:
#      - 9487:9487
    logging:
      driver: json-file
      options:
        max-size: 10m
    networks:
      - nxtp


  ################################################################################

  logdna:
    container_name: logdna
    image: logdna/logspout:$LOGDNA_VERSION
    restart: always
    environment:
      LOGDNA_KEY: $LOGDNA_KEY
      TAGS: $LOGDNA_TAG
    volumes:
      - /run/user/${USERID}/docker.sock:/var/run/docker.sock
    logging:
      driver: json-file
      options:
        max-size: 10m
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    healthcheck:
      test: netstat -ltn | grep -c 80
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - nxtp

  ################################################################################

  prometheus:
    container_name: prometheus
    image: prom/prometheus:$PROMETHEUS_VERSION
    restart: always
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.time=45d
    volumes:
      - ./data/prometheusConfig/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheusConfig/alert.rules.host:/etc/prometheus/alert.rules.host
      - ./data/prometheusConfig/alert.rules.prod:/etc/prometheus/alert.rules.prod
      - prometheus:/prometheus
    logging:
      driver: json-file
      options:
        max-size: 10m
    healthcheck:
      test: netstat -ltn | grep -c 9090
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - nxtp

  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager:$ALERTAMANGER_VERSION
    restart: always
    ports:
      - $ALERTMANAGER_EXTERNAL_PORT:9093
    command: --config.file=/config/alertmanager.yml --log.level=debug
    volumes:
      - ./data/alertmanagerConfig/alertmanager.yml:/config/alertmanager.yml
      - alertmanager:/data
    logging:
      driver: json-file
      options:
        max-size: 10m
    healthcheck:
      test: netstat -ltn | grep -c 9093
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - nxtp

  grafana:
    container_name: grafana
    image: grafana/grafana:$GRAFANA_VERSION
    restart: always
    ports:
      - $GRAFANA_EXTERNAL_PORT:3000
    volumes:
      - ./data/grafanaConfig/grafana:/etc/grafana
      - ./data/grafanaConfig/dashboards:/etc/dashboards
      - grafana:/var/lib/grafana
    logging:
      driver: json-file
      options:
        max-size: 10m
    healthcheck:
      test: netstat -ltn | grep -c 3000
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - nxtp

  loki:
    image: grafana/loki:$LOKI_VERSION
    command: -config.file=/etc/loki/config.yml
    volumes:
      - ./data/lokiConfig:/etc/loki
      - loki:/loki
    logging:
      driver: json-file
      options:
        max-size: 10m
    healthcheck:
      test: netstat -ltn | grep -c 3100
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - nxtp

  promtail:
    image: grafana/promtail:$PROMTAIL_VERSION
    volumes:
      - ~/.local/share/docker/containers:/var/lib/docker/containers
      - ./data/promtailConfig/config-rootless.yml:/etc/promtail/promtail.yml
    command: -config.file=/etc/promtail/promtail.yml
    logging:
      driver: json-file
      options:
        max-size: 10m
    healthcheck:
      test: exit 0
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - nxtp

  ################################################################################

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter:$NODE_EXPORTER_VERSION
    restart: always
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --path.rootfs=/rootfs
      - --collector.filesystem.ignored-mount-points
      - ^/(sys|proc|dev|host|etc|userfs/.local/share/docker/containers|userfs/.local/share/docker/overlay2|rootfs/run/user/${USERID}/docker/netns)(/)
    cap_add:
      - SYS_TIME
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - ~:/userfs:ro
    logging:
      driver: json-file
      options:
        max-size: 10m
    networks:
      - nxtp

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:$CADVISOR_VERSION
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /etc/machine-id:/etc/machine-id:ro
      - /run/user/${USERID}/docker.sock:/var/run/docker.sock
      - ~/.local/share/docker:/var/lib/docker:ro
      - /sys:/sys:ro
      - /dev/disk:/dev/disk
      - ~/.local/share/docker:/var/lib/docker:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    logging:
      driver: json-file
      options:
        max-size: 10m
    networks:
      - nxtp

################################################################################

networks:
  nxtp:

volumes:
  prometheus:
  grafana:
  loki:
  redis_data:
